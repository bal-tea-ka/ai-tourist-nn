"""Initial migration

Revision ID: 2bdf9767d08f
Revises: 
Create Date: 2025-10-28 23:12:29.063752

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2bdf9767d08f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('keywords', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('avg_visit_duration', sa.Integer(), nullable=False),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_table('user_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_interests', sa.Text(), nullable=False),
    sa.Column('available_time_minutes', sa.Integer(), nullable=False),
    sa.Column('user_address', sa.Text(), nullable=True),
    sa.Column('user_latitude', sa.DECIMAL(precision=10, scale=8), nullable=True),
    sa.Column('user_longitude', sa.DECIMAL(precision=11, scale=8), nullable=True),
    sa.Column('selected_places_ids', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('selected_category_ids', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('route_order', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('total_route_time', sa.Integer(), nullable=True),
    sa.Column('total_route_distance', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('perplexity_response_1', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('perplexity_response_2', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('execution_time_ms', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('ip_address', postgresql.INET(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_requests_id'), 'user_requests', ['id'], unique=False)
    op.create_table('places',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('latitude', sa.DECIMAL(precision=10, scale=8), nullable=False),
    sa.Column('longitude', sa.DECIMAL(precision=11, scale=8), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('description_clean', sa.Text(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('url', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_places_id'), 'places', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_places_id'), table_name='places')
    op.drop_table('places')
    op.drop_index(op.f('ix_user_requests_id'), table_name='user_requests')
    op.drop_table('user_requests')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
