"""Update user_requests table with analytics fields

Revision ID: 0de6eb1b9148
Revises: 67a226f75c7d
Create Date: 2025-10-29 00:26:19.349722

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0de6eb1b9148'
down_revision: Union[str, None] = '67a226f75c7d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_requests', sa.Column('available_time_hours', sa.Integer(), nullable=False))
    op.add_column('user_requests', sa.Column('total_places', sa.Integer(), nullable=True))
    op.add_column('user_requests', sa.Column('total_distance_km', sa.Float(), nullable=True))
    op.add_column('user_requests', sa.Column('total_time_minutes', sa.Integer(), nullable=True))
    op.add_column('user_requests', sa.Column('selected_categories', sa.JSON(), nullable=True))
    op.add_column('user_requests', sa.Column('route_data', sa.JSON(), nullable=True))
    op.add_column('user_requests', sa.Column('request_id', sa.String(), nullable=False))
    op.alter_column('user_requests', 'user_interests',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('user_requests', 'user_address',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('user_requests', 'user_latitude',
               existing_type=sa.NUMERIC(precision=10, scale=8),
               type_=sa.Float(),
               nullable=False)
    op.alter_column('user_requests', 'user_longitude',
               existing_type=sa.NUMERIC(precision=11, scale=8),
               type_=sa.Float(),
               nullable=False)
    op.alter_column('user_requests', 'ip_address',
               existing_type=postgresql.INET(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('user_requests', 'user_agent',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('user_requests', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_user_requests_request_id'), 'user_requests', ['request_id'], unique=True)
    op.drop_column('user_requests', 'available_time_minutes')
    op.drop_column('user_requests', 'perplexity_response_2')
    op.drop_column('user_requests', 'perplexity_response_1')
    op.drop_column('user_requests', 'selected_places_ids')
    op.drop_column('user_requests', 'selected_category_ids')
    op.drop_column('user_requests', 'total_route_distance')
    op.drop_column('user_requests', 'error_message')
    op.drop_column('user_requests', 'total_route_time')
    op.drop_column('user_requests', 'route_order')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_requests', sa.Column('route_order', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=True))
    op.add_column('user_requests', sa.Column('total_route_time', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('user_requests', sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('user_requests', sa.Column('total_route_distance', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True))
    op.add_column('user_requests', sa.Column('selected_category_ids', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=True))
    op.add_column('user_requests', sa.Column('selected_places_ids', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=True))
    op.add_column('user_requests', sa.Column('perplexity_response_1', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('user_requests', sa.Column('perplexity_response_2', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('user_requests', sa.Column('available_time_minutes', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_user_requests_request_id'), table_name='user_requests')
    op.alter_column('user_requests', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('user_requests', 'user_agent',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('user_requests', 'ip_address',
               existing_type=sa.String(),
               type_=postgresql.INET(),
               existing_nullable=True)
    op.alter_column('user_requests', 'user_longitude',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=11, scale=8),
               nullable=True)
    op.alter_column('user_requests', 'user_latitude',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=8),
               nullable=True)
    op.alter_column('user_requests', 'user_address',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('user_requests', 'user_interests',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_column('user_requests', 'request_id')
    op.drop_column('user_requests', 'route_data')
    op.drop_column('user_requests', 'selected_categories')
    op.drop_column('user_requests', 'total_time_minutes')
    op.drop_column('user_requests', 'total_distance_km')
    op.drop_column('user_requests', 'total_places')
    op.drop_column('user_requests', 'available_time_hours')
    # ### end Alembic commands ###
