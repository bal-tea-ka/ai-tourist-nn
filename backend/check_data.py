"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
"""
import asyncio
from sqlalchemy import select, func
from app.database import async_session
from app.models.category import Category
from app.models.place import Place


async def check_data():
    async with async_session() as session:
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        result = await session.execute(select(func.count()).select_from(Category))
        categories_count = result.scalar()
        
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç
        result = await session.execute(select(func.count()).select_from(Place))
        places_count = result.scalar()
        
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        result = await session.execute(
            select(Category.name, func.count(Place.id))
            .join(Place)
            .group_by(Category.name)
        )
        
        print(f"\n‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –ë–î: {categories_count}")
        print(f"‚úÖ –ú–µ—Å—Ç –≤ –ë–î: {places_count}\n")
        print("üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
        
        for name, count in result:
            print(f"  - {name}: {count} –º–µ—Å—Ç")


asyncio.run(check_data())
